/************************************************************************************
 * Copyright (C) 2012-2018 E.R.P. Consultores y Asociados, C.A.                     *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                     *
 * This program is free software: you can redistribute it and/or modify             *
 * it under the terms of the GNU General Public License as published by             *
 * the Free Software Foundation, either version 2 of the License, or                *
 * (at your option) any later version.                                              *
 * This program is distributed in the hope that it will be useful,                  *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                   *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the                     *
 * GNU General Public License for more details.                                     *
 * You should have received a copy of the GNU General Public License                *
 * along with this program.	If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.grpc.util";
option java_outer_classname = "ADempiereDictionary";
option objc_class_prefix = "HLW";

package dictionary;

// The greeting service definition.
service DictionaryService {
	// Request a Window
	rpc GetWindow(EntityRequest) returns (Window) {}
	// Request Window and tabs
	rpc GetWindowAndTabs(EntityRequest) returns (Window) {}
	// Request a Tab
	rpc GetTab(EntityRequest) returns (Tab) {}
	// Request a Tab and Fields
	rpc GetTabAndFields(EntityRequest) returns (Tab) {}
	// Request a Field
	rpc GetField(EntityRequest) returns (Field) {}
	// Request Process
	rpc GetProcess(EntityRequest) returns (Process) {}
	// Request Browser
	rpc GetBrowser(EntityRequest) returns (Browser) {}
}


// The client request contains client info for request.
message ApplicationRequest {
	string sessionUuid = 1;
	string language = 2;
}

// Object request
message EntityRequest {
	int32 id = 1;
	string uuid = 2;
	ApplicationRequest applicationRequest = 3;
}

// Window
message Window {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	string help = 5;
	bool isActive = 6;
	bool isSOTrx = 7;
	string windowType = 8;
	//	External Info
	ContextInfo contextInfo = 9;
	repeated Tab tabs = 10;
}

// Tab
message Tab {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	string help = 5;
	// Attributes
	string tableName = 6;
	int32 sequence = 7;
	int32 tabLevel = 8;
	//
	bool isActive = 9;
	bool isSingleRow = 10;
	bool isAdvancedTab = 11;
	bool isHasTree = 12;
	bool isInfoTab = 13;
	bool isSortTab = 14;
	bool isTranslationTab = 15;
	bool isReadOnly = 16;
	bool isInsertRecord = 17;
	bool isView = 18;
	bool isDeleteable = 19;
	bool isDocument = 20;
	bool isChangeLog = 21;
	int32 accessLevel = 22;
	string linkColumnName = 23;
	string parentColumnName = 24;
	string displayLogic = 25;
	string commitWarning = 26;
	string query = 27;
	string whereClause = 28;
	string orderByClause = 29;
	string parentTabUuid = 30;
	// External Info
	ContextInfo contextInfo = 31;
	repeated Process processes = 32;
	repeated Field fields = 33;
	FieldGroup fieldGroup = 34;
}

// Field
message Field {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	string help = 5;
	int32 sequence = 6;
	string columnName = 7;
	bool isDisplayed = 8;
	bool isDisplayedGrid = 9;
	bool isReadOnly = 10;
	bool isAllowCopy = 11;
	bool isEncrypted = 12;
	bool isSameLine = 13;
	bool isHeading = 14;
	bool isFieldOnly = 15;
	bool isQuickEntry = 16;
	bool isMandatory = 17;
	bool isKey = 18;
	bool isParent = 19;
	bool isUpdateable = 20;
	bool isIdentifier = 21;
	bool isAllowLogging = 22;
	bool isSelectionColumn = 23;
	bool isRange = 24;
	bool isAlwaysUpdateable = 25;
	bool isTranslated = 26;
	int32 identifierSequence = 77;
	string displayLogic = 28;
	int32 displayType = 29;
	string defaultValue = 30;
	string readOnlyLogic = 31;
	string mandatoryLogic = 32;
	string callout = 33;
	string columnSQL = 34;
	string vFormat = 35;
	string valueMin = 36;
	string valueMax = 37;
	string formatPattern = 38;
	// External Info
	ContextInfo contextInfo = 39;
	FieldGroup fieldGroup = 40;
	FieldDefinition fieldDefinition = 41;
	Reference reference = 42;
	Process process = 43;
	// Smart Browser Field Compatibility
	bool isQueryCriteria = 44;
	bool isOrderBy = 45;
	int32 seqNoGrid = 46;
	int32 sortNo = 47;
	bool isInfoOnly = 48;
	bool isActive = 49;
	// Process Parameter Compatibility
	string defaultValueTo = 50;
	int32 fieldLength = 51;
}

// Context Info
message ContextInfo {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	MessageText messageText = 5;
	string sqlStatement = 6;
	bool isActive = 7;
}

// Message
message MessageText {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string msgType = 4;
	string msgText = 5;
	string msgTip = 6;
	bool isActive = 7;
}

// Context Info
message FieldGroup {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string fieldGroupType = 4;
	bool isActive = 5;
}

// Context Info
message FieldDefinition {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string name = 4;
	string fieldGroupType = 5;
	repeated FieldCondition conditions = 6;
	bool isActive = 7;
}

// Field Condition
message FieldCondition {
	int32 id = 1;
	string uuid = 2;
	string condition = 3;
	string stylesheet = 4;
	bool isActive = 5;
}

// Process
message Process {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string name = 4;
	string description = 5;
	string help = 6;
	bool isReport = 7;
	int32 accessLevel = 8;
	string showHelp = 9;
	bool isDirectPrint = 10;
	repeated Field parameters = 11;
	bool isActive = 12;
	// Reporty Type
	repeated ReportExportType reportExportTypes = 13;
}

// Form
message Form {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	string help = 5;
	int32 accessLevel = 6;
	string className = 7;
	bool isActive = 8;
}

// Smart Browser
message Browser {
	int32 id = 1;
	string uuid = 2;
	string value = 3;
	string name = 4;
	string description = 5;
	string help = 6;
	int32 accessLevel = 8;
	string query = 9;
	string whereClause = 10;
	string orderByClause = 11;
	bool isUpdateable = 12;
	bool IsDeleteable = 13;
	bool IsSelectedByDefault = 14;
	bool IsCollapsibleByDefault = 15;
	bool IsExecutedQueryByDefault = 16;
	bool IsShowTotal = 17;
	string viewUuid = 18;
	// External Reference
	Window window = 19;
	Process process = 20;
	repeated Field fields = 21;
	bool isActive = 22;
}

// Zoom Window
message ZoomWindow {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	bool isSOTrx = 5;
	bool isActive = 6;
}

// Foreign Reference
message Reference {
	string tableName = 1;
	string keyColumnName = 2;
	string displayColumnName = 3;
	string query = 4;
	string directQuery = 5;
	string validationCode = 6;
	// External Info
	repeated ZoomWindow windows = 7;
}

// Report Type for Export
message ReportExportType {
	string name = 1;
	string description = 2;
	string type = 3;
}
