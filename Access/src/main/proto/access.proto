/*************************************************************************************
 * Copyright (C) 2012-2018 E.R.P. Consultores y Asociados, C.A.                      *
 * Contributor(s): Yamel Senih ysenih@erpya.com                                      *
 * This program is free software: you can redistribute it and/or modify              *
 * it under the terms of the GNU General Public License as published by              *
 * the Free Software Foundation, either version 2 of the License, or                 *
 * (at your option) any later version.                                               *
 * This program is distributed in the hope that it will be useful,                   *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of                    *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the                     *
 * GNU General Public License for more details.                                      *
 * You should have received a copy of the GNU General Public License                 *
 * along with this program.  If not, see <https://www.gnu.org/licenses/>.            *
 ************************************************************************************/
syntax = "proto3";

option java_multiple_files = true;
option java_package = "org.spin.grpc.util";
option java_outer_classname = "ADempiereAccess";
option objc_class_prefix = "HLW";

package access;

// The greeting service definition.
service AccessService {
  // Request user roles
  rpc GetUserInfo(LoginRequest) returns (UserInfoValue) {}
  // Request login from user
  rpc RunLogin(LoginRequest) returns (Session) {}
  // Request login and role
  rpc RunLoginDefault(LoginRequest) returns (Session) {}
  // Request a Role from uuid
  rpc RunLogout(LogoutRequest) returns (Session) {}  
  // Request user roles from Session
  rpc GetUserInfoFromSession(UserInfoRequest) returns (UserInfoValue) {}  
  // Request Menu from Parent UUID
  rpc GetMenuAndChild(UserInfoRequest) returns (Menu) {}
  // Request change role
  rpc RunChangeRole(UserInfoRequest) returns (Session) {}
}

// Request a Login Session
message LoginRequest {
	string userName = 2;
	string userPass = 3;
	string roleUuid = 4;
	string organizationUuid = 5;
	string warehouseUuid = 6;
	string clientVersion = 7;
	string language = 8;
}

// Request a Logout
message LogoutRequest {
	string sessionUuid = 1;
	string language = 2;
	string clientVersion = 3;
}

// Request a Change Role
message ChangeRoleRequest {
	string sessionUuid = 1;
	string roleUuid = 2;
	string organizationUuid = 3;
	string warehouseUuid = 4;
	string language = 5;
	string clientVersion = 6;
}

// Request User Info
message UserInfoRequest {
	string sessionUuid = 1;
	string roleUuid = 2;
	string organizationUuid = 3;
	string warehouseUuid = 4;
	string language = 5;
	string clientVersion = 6;
}

// Role list from user
message UserInfoValue {
	UserInfo userInfo = 1;
	repeated Role roles = 2;
}

// User information
message UserInfo {
	string name = 1;
	string description = 2;
	string comments = 3;
}


// Session
message Session {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	UserInfo userInfo = 4;
	Role role = 5;
	bool processed = 6;
}

// Role Definition
message Role {
	int32 id = 1;
	string uuid = 2;
	string name = 3;
	string description = 4;
	int32 clientId = 5;
	string clientName = 6;
	// Entity Access
	repeated Access organizations = 7;
	repeated Access windows = 8;
	repeated Access process = 9;
	repeated Access forms = 10;
	repeated Access browsers = 11;
	repeated Access workflows = 12;
	repeated Access tasks = 13;
	repeated Access dashboards = 14;
	repeated Access documentActions = 15;
	repeated TableAccess tables = 16;
	repeated ColumnAccess columns = 17;
	repeated RecordAccess records = 18;
}

// Access for distinct entity
message Access {
	string uuid = 1;
	bool isReadOnly = 2;
	// Optional for Document Action Access
	string action = 3;
}

// Access for Table
message TableAccess {
	string tableName = 1;
	bool isExclude = 2;
	bool isCanReport = 3;
	bool isCanExport = 4;
	enum AccessTypeRule {
		ACCESSING = 0;
		EXPORTING = 1;
		REPORTING = 2;
	}
	AccessTypeRule accessTypeRules = 5;
}

// Access for Column
message ColumnAccess {
	string tableName = 1;
	string columnName = 2;
	bool isExclude = 3;
	bool isReadOnly = 4;
}

// Access for Record
message RecordAccess {
	string tableName = 1;
	int32 recordId = 2;
	string recordUuid = 3;
	bool isExclude = 4;
	bool isReadOnly = 5;
	bool isDependentEntities = 6;
}

// Menu
message Menu {
	int32 id = 1;
	string uuid = 2;
	string parentUuid = 4;
	string name = 5;
	string description = 6;
	string sequence = 7;
	bool isReadOnly = 8;
	bool isSummary = 9;
	bool isSOTrx = 10;
	string action = 11;
	// Supported References
	string referenceUuid = 12;
	repeated Menu childs = 13;
	bool isActive = 14;
}
